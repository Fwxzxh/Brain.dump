#+title: Python

[[file:~/org/Files/Cursos/Pract-ethic-hack/PracIndex.org][Índice]]

* Python
** Shebangs y Strings
Siempre que hagamos un script en python tenemos que incluir una
/shebang/ al inicio del script, esta le dira al script la dirección del
interprete de python.

#+begin_src python
#! /bin/python #shebang

#Print hello world
print("hello, world!")
print('hello, world!')
print('\n') # salto de linea
print("""hellooo,
world""") # hacky multiline string

print("This string is " + "awesome") #conatenation
#+end_src

De esta manera podremos ejecutarlo haciendo =./nombre_del_script.py=

** Math
Python es muy bueno para trabajar con números.

#+begin_src python
#! /bin/python

print(50 + 50) #add
print(50 - 50) #substract
print(50 * 50) #multiply
print(50 / 50) #divide
print(50 ** 50) #50^50
print(50 % 50) #modulo
print(50 // 50) #div sin decimales
#+end_src

** Variables y métodos
#+begin_src python
#! /bin/python

#variables y métodos
quote = "All is fair in love and war." # variable
print(quote.upper()) # hacemos el string mayus con un el método upper()

print(len(quote))

name = "Health" #string str()
age = 30 # integer int()
gpa = 3.7 # float float()

print(int(gpa)) # con esto quitaremos los decimales de la variable gpa haciendolo un integer

print("My name is "+ name +"and I am "+ str(age) +"years old.") #solo podremos concatenar strings

age += 1 # age + 1, equivalente a `age = age + 1`
#+end_src

** Funciones
Como pequeños trozos de código que podemos llamar cuando necesitemos.

#+begin_src python

def who_am_i(): # definimos una función
    name = "Health"
    age = 30
    gpa = 3.7
    print("My name is "+ name +"and I am "+ str(age) +"years old.")

who_am_i() # llamamos a la función

#añadiendo parámetros
def add_one_hundred(num):
    print(num + 100)

add_one_hundred(100)

#múltiples parámetros
def add(x,y):
    print(x+y)

add(7,7)


def multiply(x,y):
    return (x*y) # aquí retornamos el resultado, para que otra función o método pueda usarlo

print(multiply(7,7)
#+end_src

** Booleans
#+begin_src python
bool1 = True
bool2 = 3*3 == 9 #True
bool3 = False
bool4 = 3*3 != 9

print(bool1, bool2, bool3, bool4)
# True True False False
print(type(bool1))
#+end_src

** Operadores Relacionales y booleanos
#+begin_src python
greater_than = 7 >      #all true
less_than = 5 < 7
greater_than_equal + 7 >= 7
less_than_equal_to 7 <= 7

test_and = (7 > 5) and (5 < 7)  #true
test_and2 = (7 > 5) and (5 > 7)  #false
test_or = (7 > 5) or (5 < 7)  #true
test_or2 = (7 > 5) or (5 > 7)  #true

test_not = not True #false
#+end_src

** Condicionales
#+begin_src python
def drink(money):
    if money >= 2:
        return "You've got yourself a drink"
    else:
        return "NO drink for you"

def alcohol(age,money):
    if (age >= 21) and (money >= 5):
        return "We're getting a drink!"
    elif (age >= 21) and (money < 5):
        return "Come back with more money"
    elif (age < 21) and (money >= 5):
        return "Nice Try, kid!"
    else:
        return "You're too poor and too young"
print(drink(3))
print(alcohol(21,5))
#+end_src

** listas
Listas mutables

#+begin_src python
#list - have brackets []
movies = ["When Harry Met Sally","The Hangover","The Perks of Being a Wallflower","The exorcist"]

print(movies[0]) # el primer elemento es el 0
print(movies[1:3]) # los items del 1 al 3
print(movies[1:]) # los items del 1 al último
print(movies[:2]) # del primero hasta el 2
print(movies[-1]) # El último item
print(len(movies)) # la longitud de la lisa
movies.append("JAWS")# agregar elementos a la lista
movies.pop() #Retorna y elimina el último elemento de la lista
#+end_src

** Tuples
Listas no mutables

#+begin_src python
#Tuples - Do not change, ()
grades=("a","b","c","d","f")
print(grades[1]))
#+end_src

** Importing Modules
#+begin_src python
#! /bin/python
import sys # para funciones del sistema (importante)
import os  #
from datetime import datetime #podemos importar solo un metodo
from datetime import datetime as dt # o lo podemos importar con un alias.

print(sys.version)
print(datetime.now())
print(dt.now()) # usndo el alias
#+end_src

* Strings avanzados
#+begin_src python
my_name = "Health"
print(my_name[0]) # imprimimos solo la primera letra
print(my_name[-1]) # imprimimos solo la última letra

sentence = "This is a sentence"
print(sentence[:4])

sentence_join = sentence.split(" ")# separamos el string en cada " "

sentence_join = ' '.join(sentence_join)# unimos la oración de nuevo
print(sentence_join)

quote = "he said, \"give me all your money\"" # \ hace que ignore los carateres
print(quote)

too_much_space="            hello       "
print(too_much_space.strip())# quita los espacios, el " " viene inplicito, le posemos dar cualquier arg

print("a" in "Apple") # FALSE

letter = "A"
word = "Apple"
print(letter.lower() in world.lower())# improved

movie="The Hangover"
print("My favorite movie is "+movie+".")
print("My favorite movie is {}.".format(movie))#usando un placeholder
#+end_src

** Diccionarios
#+begin_src python
#Diccionarios - key/value {}
drink={"White Russian":7, "Old Fashion": 10, "Lemon Drop": 8}#drink=key price=value
print(drink)
employees={"Finance":["bob","Linda","Tina"], "IT":["Gene","Louse","Teddy"], "HR":["Jimmy","Mort"]}
print(employees)

employees["Legal"] = ["Mr. Frond"]# add a new key: value pair
print(employees)

employees.update({"Sales": ["Andie","Ollie"]#same
print(employees)

drink["White Russian"] = 8

print(drink.get("White Russian")
#+end_src

** Sockets
creamos un nuevo archivo

#+begin_src python
#! /bin/python

import socket

HOST = `127.0.0.1`#local host
PORT = 7777

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #Declaramos todo en s.
# AF_INET = IPv4, SOCK_STREAM = PORT
s.connect((HOST, PORT))

#Con esto hacemos una conección con la IP y el puerto dados
#+end_src

** Mini Port Scaner con python
Terrible pero funcional scaner de puertos

#+begin_src python
#! /bin/python
import sys
import socket
from datetime import datetime

#define our target
if len(sys.argv)==2:
    target=socket.gethostbyname(sys.argv[1]) #Translating hostname to IPv4
else:
    print("Invalid amount of arguments. ")
    print("Syntax: python scaner.py <ip>")

#adding a pretty banner
print("-" * 30)
print("Scanning target "+target)
print("Tie started: "+srt(datetime.now()))
print("-" * 30)

try:
    for port in range(50,85):#esto no es bueno, tarda mucho, add concurrencia
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        socket.setdefaulttimeout(1)
        result = s.connect_ex((target,port)) #returns an error indicator
        if result == 0:
            print("Port {} is open".format(port))
        s.close()
except KeyboardInterrupt:
    print("\nExiting program. ")
    sys.exit()

except socket.gaierror:
    print("Hostname could not be resolved")
    sys.exit()

except socket.error:
    print("Couldn't connect to server")
    sys.exit()
#+end_src
